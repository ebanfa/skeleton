// Code generated by mockery v2.45.0. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// BusController is an autogenerated mock type for the BusController type
type BusController struct {
	mock.Mock
}

// HasCallback provides a mock function with given fields: topic
func (_m *BusController) HasCallback(topic string) bool {
	ret := _m.Called(topic)

	if len(ret) == 0 {
		panic("no return value specified for HasCallback")
	}

	var r0 bool
	if rf, ok := ret.Get(0).(func(string) bool); ok {
		r0 = rf(topic)
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// WaitAsync provides a mock function with given fields:
func (_m *BusController) WaitAsync() {
	_m.Called()
}

// NewBusController creates a new instance of BusController. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewBusController(t interface {
	mock.TestingT
	Cleanup(func())
}) *BusController {
	mock := &BusController{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
